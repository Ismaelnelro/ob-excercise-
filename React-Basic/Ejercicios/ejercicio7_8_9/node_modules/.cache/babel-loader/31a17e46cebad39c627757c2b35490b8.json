{"ast":null,"code":"var _jsxFileName = \"/home/ismael/Escritorio/RESPALDO GENERAL/RESPALDO_GENERAL/R_OpenCampus/CARPETA CAMPUS/React/Ejercicios/ejercicio7_8_9/src/components/pure/forms/ContactForm.jsx\";\n/*Este formulario me permitira trabajar con los datos para crear una nueva tarea para tasklist*/\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = _ref => {\n  let {\n    add\n  } = _ref;\n  // const nameRef = useRef('')\n  // const descriptionRef = useRef('')\n  // const notaRef = useRef('')\n  // const levelRef = useRef(LEVELS.NORMAL)\n\n  // function addTask(e) {\n  //   e.preventDefault();\n  //   const newTask = new Task(\n  //     nameRef.current.value,\n  //     descriptionRef.current.value,\n  //     notaRef.current.value,\n  //     false,\n  //     levelRef.current.value\n  //   )\n\n  //   add(newTask);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addTask,\n    className: \"d-flex justify-content-center align-items-center mb-4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactForm;\nContactForm.protoTypes = {\n  add: PropTypes.func.isRequired\n};\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useRef","PropTypes","ContactForm","add","addTask","protoTypes","func","isRequired"],"sources":["/home/ismael/Escritorio/RESPALDO GENERAL/RESPALDO_GENERAL/R_OpenCampus/CARPETA CAMPUS/React/Ejercicios/ejercicio7_8_9/src/components/pure/forms/ContactForm.jsx"],"sourcesContent":["/*Este formulario me permitira trabajar con los datos para crear una nueva tarea para tasklist*/\nimport React, { useRef } from 'react'\nimport PropTypes from 'prop-types';\n\n\nconst ContactForm = ({ add }) => {\n\n  // const nameRef = useRef('')\n  // const descriptionRef = useRef('')\n  // const notaRef = useRef('')\n  // const levelRef = useRef(LEVELS.NORMAL)\n\n  // function addTask(e) {\n  //   e.preventDefault();\n  //   const newTask = new Task(\n  //     nameRef.current.value,\n  //     descriptionRef.current.value,\n  //     notaRef.current.value,\n  //     false,\n  //     levelRef.current.value\n  //   )\n\n  //   add(newTask);\n  // }\n\n  return (\n    <form onSubmit={addTask} className='d-flex justify-content-center align-items-center mb-4'>\n      {/* <div className='form-outline flex-fill'>\n            \n            <input type=\"text\" ref={nameRef} id=\"inputName\" className='form-control form-contro-lg' required autoFocus placeholder='Task name'/>\n            <input type=\"text\" ref={descriptionRef} id=\"inputDescription\" className='form-control form-contro-lg' required placeholder='Task description'/>\n            <input type=\"text\" ref={notaRef} id=\"inputNota\" className='form-control form-contro-lg' required placeholder='Task note'/>\n           \n            <label htmlFor=\"selectLevel\" className='sr-only'>Priority</label>\n            <select ref={levelRef} defaultValue={LEVELS.NORMAL} name=\"\" id=\"selectLevel\">\n                <option value={LEVELS.NORMAL}>Normal</option>\n                <option value={LEVELS.URGENT}>Urgente</option>\n                <option value={LEVELS.BLOCKING}>Bloking</option>\n            </select>\n      </div>\n      <button type=\"submit\" className='btn btn-success btn-lg ms-3'>Add</button> */}\n    </form>\n  )\n}\n\nContactForm.protoTypes = {\n  add: PropTypes.func.isRequired\n}\n\nexport default ContactForm;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,SAAS,MAAM,YAAY;AAAC;AAGnC,MAAMC,WAAW,GAAG,QAAa;EAAA,IAAZ;IAAEC;EAAI,CAAC;EAE1B;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,oBACE;IAAM,QAAQ,EAAEC,OAAQ;IAAC,SAAS,EAAC;EAAuD;IAAA;IAAA;IAAA;EAAA,QAenF;AAEX,CAAC;AAAA,KAtCKF,WAAW;AAwCjBA,WAAW,CAACG,UAAU,GAAG;EACvBF,GAAG,EAAEF,SAAS,CAACK,IAAI,CAACC;AACtB,CAAC;AAED,eAAeL,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}