{"ast":null,"code":"var _jsxFileName = \"/home/ismael/Escritorio/RESPALDO GENERAL/RESPALDO_GENERAL/R_OpenCampus/CARPETA CAMPUS/React/Ejercicios/ejercicio7_8_9/src/components/container/ContactList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TaskForm from '../pure/forms/taskForm';\nimport { Contact } from '../../models/Contact.class';\nimport ContactComponent from '../pure/ContatComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const defaultcontact = new Contact(\"Ismael\", false);\n  const [contacts, setContacts] = useState([defaultcontact]);\n  function completeTask(task) {\n    console.log('task completada', task);\n    const index = tasks.indexOf(task);\n    // una vez obtenido no podemos modificar sobre el propio state debemos crear una variable tempora\n    // que contenga toda las tareas\n    const tempTasks = [...tasks];\n    tempTasks[index].completed = !tempTasks[index].completed;\n    // luego debemos anhadirlo al setTask la nueva lsita actualizada\n    settask(tempTasks);\n  }\n  function deleteTask(task) {\n    console.log('task deleted', task);\n    const index = tasks.indexOf(task);\n    const tempTasks = [...tasks];\n    tempTasks.splice(index, 1); // Aqui indeicamos el indice de la tarea y la cantidad\n    settask(tempTasks);\n  }\n  function createContact(contact) {\n    const tempContact = [...tasks];\n    tempTasks.push(task);\n    settask(tempTasks);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header p-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Your Friends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          \"data-mdb-perfect-scrollbar\": \"true\",\n          style: {\n            position: 'relative',\n            height: '400px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"text-dark\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"text-dark\",\n              children: contacts.map((contact, index) => {\n                return /*#__PURE__*/_jsxDEV(ContactComponent, {\n                  contact: contact\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      add: createTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactList, \"XwHsYCNzgBmHn2L/widBm9B0Xv8=\");\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useEffect","useState","TaskForm","Contact","ContactComponent","ContactList","defaultcontact","contacts","setContacts","completeTask","task","console","log","index","tasks","indexOf","tempTasks","completed","settask","deleteTask","splice","createContact","contact","tempContact","push","position","height","map","createTask"],"sources":["/home/ismael/Escritorio/RESPALDO GENERAL/RESPALDO_GENERAL/R_OpenCampus/CARPETA CAMPUS/React/Ejercicios/ejercicio7_8_9/src/components/container/ContactList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TaskForm from '../pure/forms/taskForm';\nimport { Contact } from '../../models/Contact.class';\nimport ContactComponent from '../pure/ContatComponent';\n\nconst ContactList = () => {\n    const defaultcontact = new Contact(\"Ismael\",false);\n\n    const [contacts, setContacts] = useState([defaultcontact]);\n\n    function completeTask(task) {\n        console.log('task completada', task);\n        const index = tasks.indexOf(task);\n        // una vez obtenido no podemos modificar sobre el propio state debemos crear una variable tempora\n        // que contenga toda las tareas\n        const tempTasks = [...tasks];\n        tempTasks[index].completed = !tempTasks[index].completed;\n        // luego debemos anhadirlo al setTask la nueva lsita actualizada\n        settask(tempTasks);\n    }\n    \n    function deleteTask(task) {\n        console.log('task deleted', task);\n        const index = tasks.indexOf(task);\n        const tempTasks = [...tasks];\n        tempTasks.splice(index, 1) // Aqui indeicamos el indice de la tarea y la cantidad\n        settask(tempTasks);\n    }\n\n\n    function createContact(contact){\n        const tempContact = [...tasks];\n        tempTasks.push(task)\n        settask(tempTasks)\n    }\n\n    return (\n        <div>\n            <div className='col-12'>\n                <div className='card'>\n                    {/* Card Header */}\n                    <div className='card-header p-3'>\n                        <h5>\n                          Your Friends\n                        </h5>\n                    </div>\n                    {/* Card Body */}\n                    <div className='card-body' data-mdb-perfect-scrollbar='true' style={{ position: 'relative', height: '400px' }}>\n                        <table>\n                            <thead className='text-dark'>\n                                <tr>\n                                    <th scope='col'>Name</th>\n                                    <th scope='col'>Status</th>\n                                </tr>\n                            </thead>\n                            <tbody className='text-dark'>\n                                {\n                                    contacts.map((contact, index) => {\n                                        return (\n                                            <ContactComponent contact={contact} key={index}/>\n                                        )\n                                    })\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n                    <TaskForm add={ createTask } />\n        </div>\n    );\n};\nexport default ContactList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}